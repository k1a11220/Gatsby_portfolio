{"expireTime":9007200878934290000,"key":"transformer-remark-markdown-html-ast-6d354431576e5d01f6f948e51464c0bc-gatsby-remark-smartypantsgatsby-remark-prismjsgatsby-remark-imagesgatsby-source-filesystemgatsby-remark-copy-linked-filesgatsby-plugin-canonical-urlsgatsby-plugin-use-dark-modegatsby-plugin-sitemapgatsby-remark-external-links-","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"javascript에서의 map","position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":21,"offset":21}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":21,"offset":21}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"MDN에 나와있는 설명입니다.","position":{"start":{"line":4,"column":1,"offset":23},"end":{"line":4,"column":17,"offset":39}}}],"position":{"start":{"line":4,"column":1,"offset":23},"end":{"line":4,"column":17,"offset":39}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"map() 메서드는 배열 내의 모든 요소 각각에 대하여 주어진 함수를 호출한 결과를 모아 새로운 배열을 반환합니다.","position":{"start":{"line":6,"column":3,"offset":43},"end":{"line":6,"column":67,"offset":107}}}],"position":{"start":{"line":6,"column":3,"offset":43},"end":{"line":6,"column":67,"offset":107}}},{"type":"text","value":"\n"}],"position":{"start":{"line":6,"column":1,"offset":41},"end":{"line":6,"column":67,"offset":107}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"설명만으로는 이해하기 힘들 수 있기 때문에 샘플코드와 함께 살펴보겠습니다.","position":{"start":{"line":8,"column":1,"offset":109},"end":{"line":8,"column":42,"offset":150}}}],"position":{"start":{"line":8,"column":1,"offset":109},"end":{"line":8,"column":42,"offset":150}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> array1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// pass a function to map</span>\n<span class=\"token keyword\">const</span> map1 <span class=\"token operator\">=</span> array1<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> x <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>map1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// expected output: Array [2, 8, 18, 32]</span></code></pre></div>","position":{"start":{"line":10,"column":1,"offset":152},"end":{"line":18,"column":4,"offset":318}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"쉽게 말하면 모든 배열의 값(array1 -> [1, 4, 9, 16]에 특정 함수((x) => x * 2))를 실행한다고 생각하시면 됩니다.","position":{"start":{"line":20,"column":1,"offset":320},"end":{"line":20,"column":81,"offset":400}}}],"position":{"start":{"line":20,"column":1,"offset":320},"end":{"line":20,"column":81,"offset":400}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"직접 만들면서 익혀보도록 하겠습니다.","position":{"start":{"line":22,"column":1,"offset":402},"end":{"line":22,"column":21,"offset":422}}}],"position":{"start":{"line":22,"column":1,"offset":402},"end":{"line":22,"column":21,"offset":422}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"데이터 걸러내기","position":{"start":{"line":24,"column":4,"offset":427},"end":{"line":24,"column":12,"offset":435}}}],"position":{"start":{"line":24,"column":1,"offset":424},"end":{"line":24,"column":12,"offset":435}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"저번에 ResultCard들 만들어 API 데이터를 다루기로 했습니다. 먼저, 반환되는 데이터를 살펴봅시다.","position":{"start":{"line":26,"column":1,"offset":437},"end":{"line":26,"column":61,"offset":497}}}],"position":{"start":{"line":26,"column":1,"offset":437},"end":{"line":26,"column":61,"offset":497}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"/assets/2021-04-13-bokdda-7/console-1.png","alt":"console"},"children":[],"position":{"start":{"line":28,"column":1,"offset":499},"end":{"line":28,"column":54,"offset":552}}}],"position":{"start":{"line":28,"column":1,"offset":499},"end":{"line":28,"column":54,"offset":552}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"0~3번, 마지막 배열은 API의 정보를 담고있는 데이터기 때문에 servList만 걸러내야 합니다. slice 함수를 통해 배열을 정제한 뒤 hook을 사용해 만들 배열에 JSON을 넣겠습니다.","position":{"start":{"line":30,"column":1,"offset":554},"end":{"line":30,"column":110,"offset":663}}}],"position":{"start":{"line":30,"column":1,"offset":554},"end":{"line":30,"column":110,"offset":663}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Home.js","position":{"start":{"line":32,"column":1,"offset":665},"end":{"line":32,"column":8,"offset":672}}}],"position":{"start":{"line":32,"column":1,"offset":665},"end":{"line":32,"column":8,"offset":672}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> resultNumber <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//필요없는 최상위 3개의 데이터</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> setState<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  results<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//api 데이터를 담는 hooks</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">parseStr</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">dataSet</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> dataArr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLParser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseFromString</span><span class=\"token punctuation\">(</span>dataSet<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">;</span> <span class=\"token comment\">// xml을 json으로 변경</span>\n  resultCount <span class=\"token operator\">=</span> dataArr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token comment\">// dataArr의 길이</span>\n  <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">preState</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token operator\">...</span>preState<span class=\"token punctuation\">,</span>\n      results<span class=\"token operator\">:</span> dataArr<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>resultNumber<span class=\"token punctuation\">,</span> resultCount <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//4번째부터 마지막 1개를 제외한 배열을 만든다.</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":34,"column":1,"offset":674},"end":{"line":51,"column":4,"offset":1135}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"정상적으로 원하는 데이터만 출력되는 것을 확인할 수 있습니다.\n","position":{"start":{"line":53,"column":1,"offset":1137},"end":{"line":54,"column":1,"offset":1172}}},{"type":"element","tagName":"img","properties":{"src":"/assets/2021-04-13-bokdda-7/console-2.png","alt":"console-2"},"children":[],"position":{"start":{"line":54,"column":1,"offset":1172},"end":{"line":54,"column":56,"offset":1227}}}],"position":{"start":{"line":53,"column":1,"offset":1137},"end":{"line":54,"column":56,"offset":1227}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"ResultList 함수 만들기","position":{"start":{"line":56,"column":4,"offset":1232},"end":{"line":56,"column":21,"offset":1249}}}],"position":{"start":{"line":56,"column":1,"offset":1229},"end":{"line":56,"column":21,"offset":1249}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이젠 ResultCard를 map 함수를 통해 생성하는 ResultList 컴포넌트를 만들겠습니다.","position":{"start":{"line":58,"column":1,"offset":1251},"end":{"line":58,"column":56,"offset":1306}}}],"position":{"start":{"line":58,"column":1,"offset":1251},"end":{"line":58,"column":56,"offset":1306}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"JSON 타입의 API 데이터를 result라는 인자로 받아 map 함수를 통해 ResultCard를 생성합니다.","position":{"start":{"line":60,"column":1,"offset":1308},"end":{"line":60,"column":64,"offset":1371}}}],"position":{"start":{"line":60,"column":1,"offset":1308},"end":{"line":60,"column":64,"offset":1371}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이때 데이터를 살펴보면, 우리가 필요한 정보는 n/children/n/value 라는 것을 알 수 있습니다. (n은 숫자를 의미 0, 1, 2, 3, …)\n따라서 ResultCard에 필요한 데이터를 입력해주면 됩니다.\n","position":{"start":{"line":62,"column":1,"offset":1373},"end":{"line":64,"column":1,"offset":1498}}},{"type":"element","tagName":"img","properties":{"src":"/assets/2021-04-13-bokdda-7/console-3.png","alt":"console-3"},"children":[],"position":{"start":{"line":64,"column":1,"offset":1498},"end":{"line":64,"column":56,"offset":1553}}}],"position":{"start":{"line":62,"column":1,"offset":1373},"end":{"line":64,"column":56,"offset":1553}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"ResultList.js","position":{"start":{"line":66,"column":1,"offset":1555},"end":{"line":66,"column":14,"offset":1568}}}],"position":{"start":{"line":66,"column":1,"offset":1555},"end":{"line":66,"column":14,"offset":1568}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ResultCard <span class=\"token keyword\">from</span> <span class=\"token string\">\"./ResultCard\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">ResultList</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">results</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>section className<span class=\"token operator\">=</span><span class=\"token string\">\"result-container\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span>results<span class=\"token punctuation\">.</span>results<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">post</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>ResultCard\n              key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span> <span class=\"token comment\">// key는 inqNum 고유번호로 지정함.</span>\n              title<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span> <span class=\"token comment\">// 제목: servNm</span>\n              ministry<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span> <span class=\"token comment\">// 기관: jurMnofNm</span>\n              details<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span> <span class=\"token comment\">// 설명: servDgst</span>\n            <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>section<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> ResultList<span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":68,"column":1,"offset":1570},"end":{"line":92,"column":4,"offset":2190}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"ResultList 불러오기","position":{"start":{"line":94,"column":4,"offset":2195},"end":{"line":94,"column":19,"offset":2210}}}],"position":{"start":{"line":94,"column":1,"offset":2192},"end":{"line":94,"column":19,"offset":2210}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Home에서 ResultList를 불러옵니다.","position":{"start":{"line":96,"column":1,"offset":2212},"end":{"line":96,"column":26,"offset":2237}}}],"position":{"start":{"line":96,"column":1,"offset":2212},"end":{"line":96,"column":26,"offset":2237}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Home.js","position":{"start":{"line":98,"column":1,"offset":2239},"end":{"line":98,"column":8,"offset":2246}}}],"position":{"start":{"line":98,"column":1,"offset":2239},"end":{"line":98,"column":8,"offset":2246}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">...</span>\n<span class=\"token operator\">&lt;</span>ResultList results<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>state<span class=\"token punctuation\">.</span>results<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">...</span></code></pre></div>","position":{"start":{"line":100,"column":1,"offset":2248},"end":{"line":104,"column":4,"offset":2304}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":105,"column":1,"offset":2305}}}}