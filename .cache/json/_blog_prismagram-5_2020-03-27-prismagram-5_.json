{"data":{"markdownRemark":{"html":"<p><em>모든 내용은 MacOS Catalina 기준으로 작성되었습니다</em></p>\n<h2>1. graphql 파일 생성하기</h2>\n<p>prisma와 graphql의 연결을 위해서는 graphql 파일이 필요합니다.</p>\n<p>api폴더에 models.graphql 파일을 만들어줍니다.</p>\n<p>datamodel.prisma에 있던 내용을 모두 복사해서 models.graphql파일에 넣습니다.</p>\n<p><img src=\"/assets/2020-03-27-prismagram-5/prisma.png\" alt=\"prisma\"></p>\n<p>이때 graphql에서는 @를 인식하지 못하기 때문에 꼭 @id, @unique, @relation을 삭제해주셔야 합니다.</p>\n<p><img src=\"/assets/2020-03-27-prismagram-5/graphql.png\" alt=\"graphql\"></p>\n<h2>2. $fragment</h2>\n<p>prisma는 무한 query 공격을 막기 위해서 $fragment를 사용합니다.<br>\n아래 예시를 봅시다.</p>\n<pre class=\"grvsc-container github-light-theme grvsc-ps-t4tStz\" data-language=\"graphql\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">userById(&quot;sdasasd&quot;) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    username</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    following{</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        id</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p>얼핏보면 문제가 없는 것 같지만</p>\n<pre class=\"grvsc-container github-light-theme grvsc-ps-t4tStz\" data-language=\"graphql\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">userById(&quot;sdasasd&quot;) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    username</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    following{</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        id{</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            following{</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                id{</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    following{</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                        id</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p>이런식으로 코드를 짜면 무한query 공격이 올 수 있기 때문에 $fragment를 사용하는 것입니다.</p>\n<p>$fragment에 대해서는 따로 정리하도록 하겠습니다.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .github-light-theme {\n    background-color: #ffffff;\n    color: #000000;\n  }\n  .github-light-theme .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(0, 0, 0, 0.05));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(0, 0, 0, 0.2));\n  }\n  body[data-theme=dark] .grvsc-ps-t4tStz { color: #ffffff; }\n  body[data-theme=dark] .grvsc-ps-t4tStz .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(0, 0, 0, 0.05));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(0, 0, 0, 0.2));\n  }\n</style>","frontmatter":{"title":"[BackEnd] 5. prisma와 graphql의 연결","desc":"Category Test","thumbnail":{"childImageSharp":{"fixed":{"src":"/static/b90554d56efa148b8d4c2abd64c86a3c/2244e/default.jpg"}}},"date":"2020-03-27","category":"prismagram"}}},"pageContext":{"slug":"/blog/prismagram-5/2020-03-27-prismagram-5/"}}